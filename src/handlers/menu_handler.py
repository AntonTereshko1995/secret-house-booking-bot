import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))
from src.services import job_service
from telegram import (InlineKeyboardButton, InlineKeyboardMarkup, Update)
from telegram.ext import (ContextTypes, ConversationHandler, CommandHandler)
from src.constants import AVAILABLE_DATES, BOOKING, CANCEL_BOOKING, CHANGE_BOOKING_DATE, GIFT_CERTIFICATE, MENU, PRICE, QUESTIONS, SUBSCRIPTION, USER_BOOKING
from src.handlers import booking_handler, change_booking_date_handler, cancel_booking_handler, question_handler, price_handler, gift_certificate_handler, available_dates_handler, subscription_handler, user_booking 

job = job_service.JobService()

def get_handler() -> ConversationHandler:
    handler = ConversationHandler(
        entry_points=[CommandHandler('start', show_menu)],
        states={ 
            MENU: [
                booking_handler.get_handler(),
                cancel_booking_handler.get_handler(),
                subscription_handler.get_handler(),
                change_booking_date_handler.get_handler(),
                available_dates_handler.get_handler(),
                price_handler.get_handler(),
                gift_certificate_handler.get_handler(),
                question_handler.get_handler(),
                user_booking.get_handler()],
            },
        fallbacks=[])
    return handler

async def show_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await job.init_job(update, context)
    
    buttons = [
        [InlineKeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–æ–º üè†", callback_data=str(BOOKING))],
        [InlineKeyboardButton("–ö—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç üéÅ", callback_data=str(GIFT_CERTIFICATE))],
        [InlineKeyboardButton("–û—Ñ–æ—Ä–º–∏—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç üîÑ", callback_data=str(SUBSCRIPTION))],
        [InlineKeyboardButton("–ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è üëÅÔ∏è‚Äçüó®Ô∏è", callback_data=str(USER_BOOKING))],
        [InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚ùå", callback_data=str(CANCEL_BOOKING))],
        [InlineKeyboardButton("–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ üîÑ", callback_data=str(CHANGE_BOOKING_DATE))],
        [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã üìÖ", callback_data=str(AVAILABLE_DATES))],
        [InlineKeyboardButton("–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã üí∞", callback_data=str(PRICE))],
        [InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ‚ùì", callback_data=str(QUESTIONS))],
        [InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üìû", url='https://t.me/the_secret_house')]]

    text = ("<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ The Secret House!</b>\n"
        "üè° <b>–£—é—Ç, –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ —Ç–∞–π–Ω—ã ‚Äî –≤—Å—ë –¥–ª—è –≤–∞—à–µ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞.</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç:\n\n")

    if update.message:
        await update.message.reply_text(
            text,
            parse_mode='HTML',
            reply_markup=InlineKeyboardMarkup(buttons))
    elif update.callback_query:
        await update.callback_query.answer()
        await update.callback_query.edit_message_text(
            text,
            parse_mode='HTML',
            reply_markup=InlineKeyboardMarkup(buttons))
    
    return MENU